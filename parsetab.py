
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNAR BREAK CADENA CASE CHAR COMA CONST CONTINUE DEFAULT DIV DO ELSE END ENUM FLOAT FOR IDENTIFICADOR IF IGUAL INCLUDE INT LLAVE_APERTURA LLAVE_CIERRE LONG MAIN MENORQUE MULT NUMERO PARENTESIS_APERTURA PARENTESIS_CIERRE PRINT PRINTF PROGRAMA PUNTOYCOMA READ RESTA RETURN SHORT SIGNED SIZEOF STATIC STRUCT SUMA SWITCH TYPEDEF UNION UNSIGNED VARIABLE VOID WHILEprograma : PROGRAMA IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERREdeclaraciones : declaraciones declaracion\n                     | declaraciones instruccion\n                     | declaracion\n                     | instrucciondeclaracion : tipo lista_variables PUNTOYCOMAlista_variables : lista_variables COMA IDENTIFICADOR\n                       | IDENTIFICADORinstruccion : READ IDENTIFICADOR PUNTOYCOMA\n                   | PRINTF CADENA PUNTOYCOMA\n                   | IDENTIFICADOR ASIGNAR expresion PUNTOYCOMA\n                   | END PUNTOYCOMAtipo : INTexpresion : expresion SUMA termino\n                 | expresion RESTA termino\n                 | terminotermino : termino MULT factor\n               | termino DIV factor\n               | factorfactor : PARENTESIS_APERTURA expresion PARENTESIS_CIERRE\n              | NUMERO\n              | IDENTIFICADOR'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,17,],[0,-1,]),'IDENTIFICADOR':([2,6,8,9,10,11,12,15,16,18,19,24,29,31,32,33,34,35,36,37,38,39,],[3,7,7,-4,-5,21,22,-13,25,-2,-3,-12,25,-6,41,-9,-10,-11,25,25,25,25,]),'PARENTESIS_APERTURA':([3,16,29,36,37,38,39,],[4,29,29,29,29,29,29,]),'PARENTESIS_CIERRE':([4,25,27,28,30,40,42,43,44,45,46,],[5,-22,-16,-19,-21,46,-14,-15,-17,-18,-20,]),'LLAVE_APERTURA':([5,],[6,]),'READ':([6,8,9,10,18,19,24,31,33,34,35,],[12,12,-4,-5,-2,-3,-12,-6,-9,-10,-11,]),'PRINTF':([6,8,9,10,18,19,24,31,33,34,35,],[13,13,-4,-5,-2,-3,-12,-6,-9,-10,-11,]),'END':([6,8,9,10,18,19,24,31,33,34,35,],[14,14,-4,-5,-2,-3,-12,-6,-9,-10,-11,]),'INT':([6,8,9,10,18,19,24,31,33,34,35,],[15,15,-4,-5,-2,-3,-12,-6,-9,-10,-11,]),'ASIGNAR':([7,],[16,]),'LLAVE_CIERRE':([8,9,10,18,19,24,31,33,34,35,],[17,-4,-5,-2,-3,-12,-6,-9,-10,-11,]),'CADENA':([13,],[23,]),'PUNTOYCOMA':([14,20,21,22,23,25,26,27,28,30,41,42,43,44,45,46,],[24,31,-8,33,34,-22,35,-16,-19,-21,-7,-14,-15,-17,-18,-20,]),'NUMERO':([16,29,36,37,38,39,],[30,30,30,30,30,30,]),'COMA':([20,21,41,],[32,-8,-7,]),'MULT':([25,27,28,30,42,43,44,45,46,],[-22,38,-19,-21,38,38,-17,-18,-20,]),'DIV':([25,27,28,30,42,43,44,45,46,],[-22,39,-19,-21,39,39,-17,-18,-20,]),'SUMA':([25,26,27,28,30,40,42,43,44,45,46,],[-22,36,-16,-19,-21,36,-14,-15,-17,-18,-20,]),'RESTA':([25,26,27,28,30,40,42,43,44,45,46,],[-22,37,-16,-19,-21,37,-14,-15,-17,-18,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([6,],[8,]),'declaracion':([6,8,],[9,18,]),'instruccion':([6,8,],[10,19,]),'tipo':([6,8,],[11,11,]),'lista_variables':([11,],[20,]),'expresion':([16,29,],[26,40,]),'termino':([16,29,36,37,],[27,27,42,43,]),'factor':([16,29,36,37,38,39,],[28,28,28,28,44,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERRE','programa',7,'p_programa','parser.py',6),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',10),
  ('declaraciones -> declaraciones instruccion','declaraciones',2,'p_declaraciones','parser.py',11),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',12),
  ('declaraciones -> instruccion','declaraciones',1,'p_declaraciones','parser.py',13),
  ('declaracion -> tipo lista_variables PUNTOYCOMA','declaracion',3,'p_declaracion','parser.py',17),
  ('lista_variables -> lista_variables COMA IDENTIFICADOR','lista_variables',3,'p_lista_variables','parser.py',21),
  ('lista_variables -> IDENTIFICADOR','lista_variables',1,'p_lista_variables','parser.py',22),
  ('instruccion -> READ IDENTIFICADOR PUNTOYCOMA','instruccion',3,'p_instruccion','parser.py',26),
  ('instruccion -> PRINTF CADENA PUNTOYCOMA','instruccion',3,'p_instruccion','parser.py',27),
  ('instruccion -> IDENTIFICADOR ASIGNAR expresion PUNTOYCOMA','instruccion',4,'p_instruccion','parser.py',28),
  ('instruccion -> END PUNTOYCOMA','instruccion',2,'p_instruccion','parser.py',29),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',33),
  ('expresion -> expresion SUMA termino','expresion',3,'p_expresion','parser.py',37),
  ('expresion -> expresion RESTA termino','expresion',3,'p_expresion','parser.py',38),
  ('expresion -> termino','expresion',1,'p_expresion','parser.py',39),
  ('termino -> termino MULT factor','termino',3,'p_termino','parser.py',43),
  ('termino -> termino DIV factor','termino',3,'p_termino','parser.py',44),
  ('termino -> factor','termino',1,'p_termino','parser.py',45),
  ('factor -> PARENTESIS_APERTURA expresion PARENTESIS_CIERRE','factor',3,'p_factor','parser.py',49),
  ('factor -> NUMERO','factor',1,'p_factor','parser.py',50),
  ('factor -> IDENTIFICADOR','factor',1,'p_factor','parser.py',51),
]
